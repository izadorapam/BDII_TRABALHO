-- ==================================================
-- ============ TESTES DE CONTROLE DE ACESSO ========
-- ==================================================

----------- COMANDOS DIRETOS (SEM TRATAMENTO)
-- TESTE 1: VERIFICAÇÃO DAS ROLES CRIADAS
SELECT ROLNAME FROM PG_ROLES;

-- TESTE 2: ADMINISTRADOR - ACESSO TOTAL
SET ROLE FLOR_ADMINISTRADOR;
-- DEVE FUNCIONAR:
SELECT * FROM CLIENTE;
--OK
INSERT INTO CLIENTE VALUES (100, 'TESTE ADMIN', 'RUA TESTE', '86999999999', 'TESTE@EMAIL.COM');
--OK
UPDATE CLIENTE SET NOME = 'TESTE ADMIN 2' WHERE ID_CLIENTE = 100;
--OK
DELETE FROM CLIENTE WHERE ID_CLIENTE = 100;
--OK
RESET ROLE;

-- TESTE 3: GERENTE - ACESSO COM RESTRIÇÕES
SET ROLE FLOR_GERENTE;
-- DEVE FUNCIONAR:
SELECT * FROM PEDIDO;
--OK
INSERT INTO PEDIDO VALUES (101, 1, '86999140001', 120.00, 1);
--OK

-- DEVE FALHAR (ACESSO NEGADO):
UPDATE FUNCIONARIO SET CARGO = 'GERENTE' WHERE ID_FUNCIONARIO = 1;
--OK
RESET ROLE;

-- TESTE 4: VENDEDOR - ACESSO LIMITADO
SET ROLE FLOR_VENDEDOR;
-- DEVE FUNCIONAR:
SELECT * FROM VW_PRODUTOS_ATIVOS;
--OK
INSERT INTO ITEM_PEDIDO VALUES (100, 1, 5, 9.90);
--FUNCIONA
--ESTOQUE INSUFICIENTE TAMBÉM
SELECT * FROM ITEM_PEDIDO
--NÃO FUNCIONOU 
-- DEVE FALHAR (ACESSO NEGADO):
SELECT * FROM COMPRA
--OK
RESET ROLE;

-- TESTE 5: ESTOQUISTA - ACESSO A PRODUTOS E COMPRAS
SET ROLE FLOR_ESTOQUISTA;
-- DEVE FUNCIONAR:
UPDATE PRODUTO SET ESTOQUE = 50 WHERE ID_PRODUTO = 1;
INSERT INTO COMPRA VALUES (100, 1, CURRENT_DATE, 0, 5);
-- DEVE FALHAR (ACESSO NEGADO):
SELECT * FROM CLIENTE;
RESET ROLE;

-- TESTE 6: RELATÓRIOS - SOMENTE LEITURA
SET ROLE FLOR_RELATORIOS;
-- DEVE FUNCIONAR:
SELECT * FROM VENDAS_POR_FUNCIONARIO();
-- DEVE FALHAR (ACESSO NEGADO):
INSERT INTO PRODUTO VALUES (100, 50, 'TESTE', 10.00, 'TESTE', NULL);
RESET ROLE;


------------------- USANDO FUNÇÕES CRIADAS (COM TRATAMENTO) ------------------------

------TESTE DE ADMINISTRADOR (ACESSO TOTAL)
SET ROLE FLOR_ADMINISTRADOR;

-- TESTE 1.1: CADASTRO DE CLIENTE
SELECT CADASTRAR_CLIENTE(300, 'ADMIN TESTE', 'RUA ADMIN', '86999999999', 'admin@teste.com');
-- DEVE RETORNAR: "SUCESSO: CLIENTE CADASTRADO COM SUCESSO. ID: 300"

-- TESTE 1.2: ALTERAÇÃO DE FUNCIONÁRIO
SELECT ALTERAR_DADO('FUNCIONARIO', 'ID_FUNCIONARIO', '1', 'CARGO = ''GERENTE GERAL''');
-- DEVE RETORNAR: "SUCESSO: REGISTRO ATUALIZADO EM FUNCIONARIO"

-- TESTE 1.3: REMOÇÃO DE PRODUTO
SELECT REMOVER_PRODUTO(28);
-- DEVE RETORNAR SUCESSO OU ERRO ESPECÍFICO SE HOUVER RESTRIÇÕES

RESET ROLE;

------ TESTE DE GERENTE (ACESSO COM RESTRIÇÕES)
SET ROLE FLOR_GERENTE;

-- TESTE 2.1: CONSULTA DE PEDIDOS (DEVE FUNCIONAR)
SELECT * FROM VW_PEDIDOS_ATIVOS;
-- DEVE RETORNAR A LISTA DE PEDIDOS

-- TESTE 2.2: ALTERAÇÃO DE FUNCIONÁRIO (DEVE FALHAR)
SELECT ALTERAR_DADO('FUNCIONARIO', 'ID_FUNCIONARIO', '1', 'CARGO = ''GERENTE''');
-- DEVE RETORNAR: "ERRO: SEU PERFIL NÃO TEM PERMISSÃO PARA ALTERAR ESTA TABELA."

-- TESTE 2.3: REGISTRO DE PEDIDO (DEVE FUNCIONAR)
SELECT REGISTRAR_PEDIDO(
    P_ID_PEDIDO => 200,
    P_ID_CLIENTE => 1,
    P_TELEFONE => '86999990001',
    P_ID_FUNCIONARIO => 1,
    P_ID_PRODUTO1 => 1,
    P_QUANT1 => 5,
    P_VALOR1 => 9.90
);
-- DEVE RETORNAR SUCESSO

RESET ROLE;

----- TESTE DE VENDEDOR (ACESSO LIMITADO)

SET ROLE FLOR_VENDEDOR;

-- TESTE 3.1: CONSULTA DE PRODUTOS (DEVE FUNCIONAR)
SELECT * FROM VW_PRODUTOS_ATIVOS;
-- DEVE RETORNAR A LISTA DE PRODUTOS

-- TESTE 3.2: REGISTRO DE ITEM DE PEDIDO (DEVE FUNCIONAR)
SELECT REGISTRAR_PEDIDO(201, 2, '86999990002', 50.00, 1, 1, 9.90);
-- DEVE RETORNAR SUCESSO

-- TESTE 3.3: CONSULTA DE COMPRAS (DEVE FALHAR)
SELECT * FROM COMPRA;
-- DEVE RETORNAR ERRO DE PERMISSÃO (MENSAGEM PADRÃO DO POSTGRESQL)

RESET ROLE;

----- TESTE DE ESTOQUISTA
SET ROLE FLOR_ESTOQUISTA;

-- TESTE 4.1: ATUALIZAÇÃO DE ESTOQUE (DEVE FUNCIONAR)
SELECT ATUALIZAR_ESTOQUE(1, 100);
-- DEVE RETORNAR: "ESTOQUE ATUALIZADO COM SUCESSO PARA 100 UNIDADES."

-- TESTE 4.2: REGISTRO DE COMPRA (DEVE FUNCIONAR)
SELECT REGISTRAR_COMPRA(101, 1, CURRENT_DATE, 5, 1, 10, 8.00);
-- DEVE RETORNAR: "SUCESSO: COMPRA REGISTRADA COM ID 101"

-- TESTE 4.3: CONSULTA DE CLIENTES (DEVE FALHAR)
SELECT * FROM CLIENTE;
-- DEVE RETORNAR ERRO DE PERMISSÃO

RESET ROLE;

----- TESTE DE RELATÓRIOS (SOMENTE LEITURA)

SET ROLE FLOR_RELATORIOS;

-- TESTE 5.1: CONSULTA DE RELATÓRIO (DEVE FUNCIONAR)
SELECT * FROM VENDAS_POR_FUNCIONARIO();
-- DEVE RETORNAR O RELATÓRIO

-- TESTE 5.2: TENTATIVA DE INSERÇÃO (DEVE FALHAR)
SELECT CADASTRAR_PRODUTO(999, 100, 'TESTE BLOQUEADO', 10.00, 'TESTE', NULL);
-- DEVE RETORNAR: "ERRO: SEU PERFIL NÃO TEM PERMISSÃO PARA CADASTRAR PRODUTOS."

RESET ROLE;

------ TESTES ADICIONAIS DE VALIDAÇÃO

---- VALIDAÇÃO DE ERROS DE ACESSO EM FUNÇÕES

-- TESTE 6.1: VENDEDOR TENTANDO ALTERAR ESTOQUE
SET ROLE FLOR_VENDEDOR;
SELECT ATUALIZAR_ESTOQUE(1, 50);
-- DEVE RETORNAR: "ERRO: SEU PERFIL NÃO TEM PERMISSÃO PARA ATUALIZAR ESTOQUE."

-- TESTE 6.2: ESTOQUISTA TENTANDO ALTERAR CLIENTE
SET ROLE FLOR_ESTOQUISTA;
SELECT ALTERAR_DADO('CLIENTE', 'ID_CLIENTE', '1', 'NOME = ''NOVO NOME''');
-- DEVE RETORNAR: "ERRO: SEU PERFIL NÃO TEM PERMISSÃO PARA ALTERAR ESTA TABELA."

RESET ROLE;

--- VALIDAÇÃO DE MENSAGENS DE ERRO AMIGÁVEIS
-- TESTE 7.1: TENTATIVA DE REMOÇÃO COM PEDIDOS ATIVOS
SET ROLE FLOR_ADMINISTRADOR;
SELECT REMOVER_CLIENTE(1);
-- DEVE RETORNAR: "ERRO: CLIENTE POSSUI PEDIDOS ATIVOS ASSOCIADOS."

-- TESTE 7.2: TENTATIVA DE CADASTRO COM EMAIL INVÁLIDO
SELECT CADASTRAR_CLIENTE(301, 'TESTE', 'RUA TESTE', '86999999999', 'emailinvalido');
-- DEVE RETORNAR: "ERRO: FORMATO DE EMAIL INVÁLIDO."

RESET ROLE;



